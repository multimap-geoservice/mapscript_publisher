{
    "IMODS":["interface"],
    "VARS":{
        "name": "",
        "data": "",
        "title": "",
        "imagecolor": [153, 179, 204], 
        "extent": [
            -180,
            -90,
            180,
            90
        ],
        "size": [800, 800],
        "db_connection": "",
        "epsg_id": 4326,
        "end_query_str": "as foo using unique id using srid={}",
        "data_query_str": "        where external_id in {}",
        "data_start":[
            "geometry from",
            "("
        ],
        "query_start":[
            "with",
            "    ids as (",
            "        select map_id",
            "        from sxf_common_loaded_maps",
            {
                "VAR": "data_query_str",
                "{}": {
                    "VAR":"data"
                }
            },
            "    ),",
            "    objs as (",
            "        select rsc_code+code+gid as id,",
            "               name as type,",
            "               array[",
            "                   (regexp_split_to_array(attr1, ':'))[1],",
            "                   (regexp_split_to_array(attr2, ':'))[1],",
            "                   (regexp_split_to_array(attr3, ':'))[1],",
            "                   (regexp_split_to_array(attr4, ':'))[1],",
            "                   (regexp_split_to_array(attr5, ':'))[1]",
            "               ] as attr_keys,",
            "               array[",
            "                   (regexp_split_to_array(attr1, ':'))[2],",
            "                   (regexp_split_to_array(attr2, ':'))[2],",
            "                   (regexp_split_to_array(attr3, ':'))[2],",
            "                   (regexp_split_to_array(attr4, ':'))[2],",
            "                   (regexp_split_to_array(attr5, ':'))[2]",
            "               ] as attr_vals,",
            "               wkb_geometry as geometry,",
            "               '[^a-zA-Zа-яА-ЯёЁ0-9 .,-]*|' as sym_bug",
            "        from ("
        ],
        "query_meso":[
            "        ) as unions",
            "        group by id,",
            "            name,",
            "            attr1,",
            "            attr2,",
            "            attr3,",
            "            attr4,",
            "            attr5,",
            "            wkb_geometry,",
            "            sym_bug",
            "    )",
            "select id,",
            "       type,"
        ],
        "query_end":[
            "       geometry",
            "from objs"
        ],
        "data_end":[
            ")",
            {
                "VAR": "end_query_str",
                "{}": {
                    "VAR":"epsg_id"
                }
            }
        ],
        "layer_dicts": [
            {
                "wfs_layer_temp": "wfs_polygon",
                "name": "gidrografiya_polygon",
                "abstract": "Гидрография (полигон)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_gidrografiya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_gidrografiya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_gidrografiya",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "        case",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as name,",
                            "        case",
                            "            when array_position(attr_keys,'ПРИЗНАК СУДОХОДСТВА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПРИЗНАК СУДОХОДСТВА')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as shipping,",
                            "        case",
                            "            when array_position(attr_keys,'ТИП ВОДОТОКА,БЕРЕГОВОЙ ЛИНИИ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ТИП ВОДОТОКА,БЕРЕГОВОЙ ЛИНИИ')], E''||sym_bug||'КОД','', 'g')",
                            "            when array_position(attr_keys,'ТИП ВОДОТОКА (ВОДОЕМА)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ТИП ВОДОТОКА (ВОДОЕМА)')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "       end as watercourse,",
                            "       case",
                            "           when array_position(attr_keys,'КАЧЕСТВЕННЫЕ ОСОБЕННОСТИ ВОДЫ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'КАЧЕСТВЕННЫЕ ОСОБЕННОСТИ ВОДЫ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as quality,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_polygon",
                "name": "gidrografiya_relef_polygon",
                "abstract": "Гидрография рельеф(полигон)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_gidrografiya_relef_",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_gidrografiya_relef_",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_gidrografiya_relef_",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "        case",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as name,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_polygon",
                "name": "grunti_polygon",
                "abstract": "Грунты и лавовые потоки(полигон)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_grunty_i_lavovye_pokrovy",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_grunty_i_lavovye_pokrovy",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_grunty_i_lavovye_pokrovy",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "        case",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as name,",
                            "        case",
                            "            when array_position(attr_keys,'ПРОХОДИМОСТЬ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПРОХОДИМОСТЬ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as passability,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_polygon",
                "name": "naselennye_punkty_polygon",
                "abstract": "Населённые пункты (полигон)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_naselennye_punkty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_naselennye_punkty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_naselennye_punkty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_naselennye_punkty_kvartaly_",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_naselenn_p_kvart_neodnorodnye_",
                            "            union ",
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_naselennye_punkty_stroeniya_",
                            "            union",       
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_naselennye_punkty_kvartaly_",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_naselennye_punkty_kvartaly_",
                            {"VAR": "query_meso"},
                            "        case",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as name,",
                            "        case",
                            "            when array_position(attr_keys,'КОЛИЧЕСТВО ЖИТЕЛЕЙ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'КОЛИЧЕСТВО ЖИТЕЛЕЙ')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'КОЛИЧЕСТВО ЖИТЕЛЕЙ ПО ШКАЛЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'КОЛИЧЕСТВО ЖИТЕЛЕЙ ПО ШКАЛЕ')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as citizens,",
                            "        case",
                            "            when array_position(attr_keys,'ПОЛИТИКО-АДМИНИСТРАТИВ.ДЕЛЕНИ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПОЛИТИКО-АДМИНИСТРАТИВ.ДЕЛЕНИ')], E''||sym_bug||'КОД','', 'g')",
                            "            when array_position(attr_keys,'ПОЛИТИКО-АДМИНИСТР.ЗНАЧЕНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПОЛИТИКО-АДМИНИСТР.ЗНАЧЕНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as administration,",
                            "        case",
                            "            when array_position(attr_keys,'ПРИНАДЛЕЖН.НАСЕЛЕННОМУ ПУНКТУ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПРИНАДЛЕЖН.НАСЕЛЕННОМУ ПУНКТУ')], E''||sym_bug||'КОД','', 'g')",
                            "            when array_position(attr_keys,'ПРИНАДЛЕЖНОСТЬ НАСЕЛЕН.ПУНКТУ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПРИНАДЛЕЖНОСТЬ НАСЕЛЕН.ПУНКТУ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as affilation,",
                            "        case",
                            "            when array_position(attr_keys,'ПЛОТНОСТЬ ЗАСТРОЙКИ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПЛОТНОСТЬ ЗАСТРОЙКИ')], E''||sym_bug||'КОД','', 'g')",
                            "            when array_position(attr_keys,'ПЛОТНОСТЬ (ТИП) ЗАСТРОЙКИ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПЛОТНОСТЬ (ТИП) ЗАСТРОЙКИ')], E''||sym_bug||'КОД','', 'g')",
                            "            when array_position(attr_keys,'ПЛОТНОСТЬ,ТИП ЗАСТРОЙКИ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПЛОТНОСТЬ,ТИП ЗАСТРОЙКИ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as buildings,",
                            "        case",
                            "            when array_position(attr_keys,'СОСТОЯНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОСТОЯНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as state,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            },
            {
                "wfs_layer_temp": "wfs_polygon",
                "name": "promyshlen_i_sotsialnye_objecty_polygon",
                "abstract": "Промышленные и социальные объекты (полигон)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_promyshlen_i_sotsialnye_ob_ekt",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_promyshlennye_sotsialn_ob_ekty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_promyshlennye_sotsialn_ob_ekty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_promyshlen_i_sotsialnye_obekty",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "        case",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as name,",
                            "        case",
                            "            when array_position(attr_keys,'НАЗНАЧЕНИЕ ОБЪЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'НАЗНАЧЕНИЕ ОБЪЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "            when array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as function,",
                            "        case",
                            "            when array_position(attr_keys,'ВНУТРЕННЯЯ СТРУКТУРА ОБЪЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ВНУТРЕННЯЯ СТРУКТУРА ОБЪЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as structure,",
                            "        case",
                            "            when array_position(attr_keys,'ГЛУБИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГЛУБИНА')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as depth,",
                            "        case",
                            "            when array_position(attr_keys,'СОСТОЯНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОСТОЯНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as state,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_polygon",
                "name": "rastitelnost_polygon",
                "abstract": "Растительность (полигон)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_rastitelnost",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_kamyshovye_mangrovye_zarosli",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_rastitelnost_zalivka_takyr",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_rastitelnost",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_rastitelnost_zalivka_takyry",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_rastitelnost_po_gidrografii",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_rastitelnost_zalivka_takyry",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "        case",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as name,",
                            "        case",
                            "            when array_position(attr_keys,'ПРОХОДИМОСТЬ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПРОХОДИМОСТЬ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as patency,",
                            "        case",
                            "            when array_position(attr_keys,'НАЗНАЧЕНИЕ ОБЪЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'НАЗНАЧЕНИЕ ОБЪЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "            when array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ ')], E''||sym_bug||'КОД','', 'g')",
                            "            else null",
                            "        end as function,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_polygon",
                "name": "relef_sushi_polygon",
                "abstract": "Рельеф суши (полигон)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_polygon_relef_sushi",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_polygon_relef_sushi",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_polygon_relef_sushi",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "        case",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "            when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as name,",
                            "        case",
                            "            when array_position(attr_keys,'ГЛУБИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГЛУБИНА')], E''||sym_bug,'', 'g')",
                            "            else null",
                            "        end as depth,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_line",
                "name": "dorozhnaya_set_line",
                "abstract": "Дорожная сеть (линия)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_line_dorozhnaya_set",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_line_dorozhnaya_set",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_dorozhnaya_set",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_line_naselennye_punkty_kvartaly_",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_line_naselennye_punkty_kvartaly_",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_naselennye_punkty_kvartaly_",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'НОМЕР ДОРОГИ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'НОМЕР ДОРОГИ')], E''||sym_bug||'НОМЕР','', 'g')",
                            "           else null",
                            "       end as number,",
                            "       case",
                            "           when array_position(attr_keys,'МАТЕРИАЛ ПОКРЫТИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МАТЕРИАЛ ПОКРЫТИЯ')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'МАТЕРИАЛ СООРУЖЕНИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МАТЕРИАЛ СООРУЖЕНИЯ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as material,",
                            "       case",
                            "           when array_position(attr_keys,'ТЕРРИТОР./ГОСУД.ПРИНАДЛЕЖНОСТ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ТЕРРИТОР./ГОСУД.ПРИНАДЛЕЖНОСТ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ТЕРРИТОРИАЛЬНАЯ ПРИНАДЛЕЖНОСТЬ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ТЕРРИТОРИАЛЬНАЯ ПРИНАДЛЕЖНОСТЬ')], E''||sym_bug||'КОД','', 'g')",          
                            "           else null",
                            "       end as state,",
                            "       case",
                            "           when array_position(attr_keys,'ШИРИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ШИРИНА ПОКРЫТИЯ ДОРОГИ,ПРОЕЗДА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА ПОКРЫТИЯ ДОРОГИ,ПРОЕЗДА')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ШИРИНА ПОКРЫТИЯ,ПРОЕЗДА И Т.Д.') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА ПОКРЫТИЯ,ПРОЕЗДА И Т.Д.')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ШИРИНА ПО ШКАЛЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА ПО ШКАЛЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as width,",
                            "       case",
                            "           when array_position(attr_keys,'КОЛИЧЕСТВО ПРОЕЗЖИХ ЧАСТЕЙ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'КОЛИЧЕСТВО ПРОЕЗЖИХ ЧАСТЕЙ')], E''||sym_bug||'ЕДИН','', 'g')",
                            "           when array_position(attr_keys,'ЧИСЛО ПУТЕЙ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ЧИСЛО ПУТЕЙ')], E''||sym_bug||'ЕДИН','', 'g')",
                            "           else null",
                            "       end as phats,",
                            "       case",
                            "           when array_position(attr_keys,'СОСТОЯНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОСТОЯНИЕ')], E''||sym_bug||'КОД','', 'g')",     
                            "           else null",
                            "       end as condition,",
                            {"VAR": "query_end"},
                            "where type != 'СТРОЕНИЯ ОТДЕЛЬН.НЕВЫДАЮЩИЕСЯ'",
                            "and type != 'КВАРТАЛЫ'",
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_line",
                "name": "dorozhnye_sooruzheniya_line",
                "abstract": "Дорожные сооружения (линия)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_line_dorozhnye_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_line_dorozhnye_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_dorozhnye_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_line_nasypi_vyemki_estakady",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_line_nasypi_i_vyemki",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_nasypi_i_vyemki",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'НОМЕР ДОРОГИ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'НОМЕР ДОРОГИ')], E''||sym_bug||'НОМЕР','', 'g')",
                            "           else null",
                            "       end as number,",
                            "       case",
                            "           when array_position(attr_keys,'ГРУЗОПОД''ЕМНОСТЬ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГРУЗОПОД''ЕМНОСТЬ')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ГРУЗОПОДЪЕМНОСТЬ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГРУЗОПОДЪЕМНОСТЬ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as carrying,",
                            "       case",
                            "           when array_position(attr_keys,'МАТЕРИАЛ ПОКРЫТИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МАТЕРИАЛ ПОКРЫТИЯ')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'МАТЕРИАЛ СООРУЖЕНИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МАТЕРИАЛ СООРУЖЕНИЯ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as material,",
                            "       case",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБ''ЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБ''ЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБЪЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБЪЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'МЕСТО РАСПОЛОЖЕНИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МЕСТО РАСПОЛОЖЕНИЯ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОТНОС.ЗЕМЛИ(ВОДЫ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОТНОС.ЗЕМЛИ(ВОДЫ)')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ХАРАКТЕР РАСП.ОТН.ЗЕМЛИ (ВОДЫ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ХАРАКТЕР РАСП.ОТН.ЗЕМЛИ (ВОДЫ)')], E''||sym_bug||'КОД','', 'g')",    
                            "           else null",
                            "       end as location,",            
                            "       case",
                            "           when array_position(attr_keys,'ШИРИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ШИРИНА ПОКРЫТИЯ ДОРОГИ,ПРОЕЗДА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА ПОКРЫТИЯ ДОРОГИ,ПРОЕЗДА')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ШИРИНА ПОКРЫТИЯ,ПРОЕЗДА И Т.Д.') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА ПОКРЫТИЯ,ПРОЕЗДА И Т.Д.')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ШИРИНА ПО ШКАЛЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА ПО ШКАЛЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as width,",
                            "       case",
                            "           when array_position(attr_keys,'ДЛИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ДЛИНА')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as length,",
                            "       case",
                            "           when array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as height,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_line",
                "name": "gidrografiya_line",
                "abstract": "Гидрография (линия)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_line_gidrografiya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_line_gidrografiya_lineynaya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_line_gidrografiya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_gidrografiya",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'ПРИЗНАК СУДОХОДСТВА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ПРИЗНАК СУДОХОДСТВА')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as shipping,",
                            "       case",
                            "           when array_position(attr_keys,'ТИП ВОДОТОКА,БЕРЕГОВОЙ ЛИНИИ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ТИП ВОДОТОКА,БЕРЕГОВОЙ ЛИНИИ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ТИП ВОДОТОКА (ВОДОЕМА)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ТИП ВОДОТОКА (ВОДОЕМА)')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as watercourse,",
                            "       case",
                            "           when array_position(attr_keys,'КАЧЕСТВЕННЫЕ ОСОБЕННОСТИ ВОДЫ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'КАЧЕСТВЕННЫЕ ОСОБЕННОСТИ ВОДЫ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as quality,",
                            "       case",
                            "           when array_position(attr_keys,'ШИРИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ШИРИНА ПО ШКАЛЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА ПО ШКАЛЕ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as width,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_line",
                "name": "gidrotehnicheskie_sooruzheniya_line",
                "abstract": "Гидрографические сооружения (линия)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_line_gidrotehnicheskie_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_line_akved_damby_brody_plotiny_shlyuzy",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_line_gidrotehnicheskie_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_gidrotehnicheskie_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБ''ЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБ''ЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБЪЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБЪЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОТНОС.ЗЕМЛИ(ВОДЫ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОТНОС.ЗЕМЛИ(ВОДЫ)')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ХАРАКТЕР РАСП.ОТН.ЗЕМЛИ (ВОДЫ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ХАРАКТЕР РАСП.ОТН.ЗЕМЛИ (ВОДЫ)')], E''||sym_bug||'КОД','', 'g')",    
                            "           else null",
                            "       end as location,",
                            "       case",
                            "           when array_position(attr_keys,'ШИРИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ШИРИНА ПО ШКАЛЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ШИРИНА ПО ШКАЛЕ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as width,",
                            "       case",
                            "           when array_position(attr_keys,'СОСТОЯНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОСТОЯНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as station,",
                            "       case",
                            "           when array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as height,",
                            "       case",
                            "           when array_position(attr_keys,'МАТЕРИАЛ ПОКРЫТИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МАТЕРИАЛ ПОКРЫТИЯ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'МАТЕРИАЛ СООРУЖЕНИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МАТЕРИАЛ СООРУЖЕНИЯ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as material,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_line",
                "name": "granitsy_line",
                "abstract": "Границы (линия)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_line_granitsy_i_ograzhdeniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_line_granitsy_i_ograzhdeniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_granitsy_i_ograzhdeniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_uchastki_granits",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            {"VAR": "query_end"},
                            "where type != 'ИЗОГОНЫ'",
                            "and type != 'ВСПОМАГАТЕЛЬНЫЕ ЛИНИИ (черные'",
                            "and type != 'ГРАНИЦЫ РАЙ-ОВ АНОМ.МАГ.СКЛОН'",
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_line",
                "name": "promyshlen_sotsialnye_obekty_line",
                "abstract": "Промышленные и социальные объекты (линия)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_line_promyshlen_i_sotsialnye_ob_ekt",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_line_promyshlen_i_sotsialnye_obekty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_line_promyshlennye_sotsialn_ob_ekty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_line_promyshlennye_sotsialn_ob_ekty",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as function,",
                            "       case",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБ''ЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБ''ЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБЪЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОБЪЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'МЕСТО РАСПОЛОЖЕНИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МЕСТО РАСПОЛОЖЕНИЯ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОТНОС.ЗЕМЛИ(ВОДЫ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОТНОС.ЗЕМЛИ(ВОДЫ)')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ХАРАКТЕР РАСП.ОТН.ЗЕМЛИ (ВОДЫ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ХАРАКТЕР РАСП.ОТН.ЗЕМЛИ (ВОДЫ)')], E''||sym_bug||'КОД','', 'g')",   
                            "           when array_position(attr_keys,'ХАР.РАСПОЛ.ОБ''ЕКТА(отн.з/воды') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ХАР.РАСПОЛ.ОБ''ЕКТА(отн.з/воды')], E''||sym_bug||'КОД','', 'g')",     
                            "           else null",
                            "       end as location,",
                            "       case",
                            "           when array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as height,",
                            "       case",
                            "           when array_position(attr_keys,'ГЛУБИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГЛУБИНА')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as depth,",
                            "       case",
                            "           when array_position(attr_keys,'НАПРЯЖЕНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'НАПРЯЖЕНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'НАПРЯЖЕНИЕ ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'НАПРЯЖЕНИЕ ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as power,",
                            "       case",
                            "           when array_position(attr_keys,'ТИП ОПОР') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ТИП ОПОР')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ТИП ОПОР ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ТИП ОПОР ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as supports,",
                            "       case",
                            "           when array_position(attr_keys,'СОСТОЯНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОСТОЯНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as state,",                            
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_point",
                "name": "gidrografiya_relef_point",
                "abstract": "Гидрографический рельеф (точка)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_point_gidrografiya_relef_",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_point_gidrografiya_relef_",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_point_gidrografiya_relef_",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'ГЛУБИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГЛУБИНА')], E''||sym_bug||'М','', 'g')",
                            "           when array_position(attr_keys,'ГЛУБИНА ОТНОСИТЕЛЬНАЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГЛУБИНА ОТНОСИТЕЛЬНАЯ')], E''||sym_bug||'М','', 'g')",
                            "           else null",
                            "       end as depth,",
                            "       case",
                            "           when array_position(attr_keys,'АБСОЛЮТНАЯ ВЫСОТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'АБСОЛЮТНАЯ ВЫСОТА')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as height,",
                            "       case",
                            "           when array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОТНОС.ЗЕМЛИ(ВОДЫ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'РАСПОЛОЖЕНИЕ ОТНОС.ЗЕМЛИ(ВОДЫ)')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ХАРАКТЕР РАСП.ОТН.ЗЕМЛИ (ВОДЫ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ХАРАКТЕР РАСП.ОТН.ЗЕМЛИ (ВОДЫ)')], E''||sym_bug||'КОД','', 'g')",           
                            "           when array_position(attr_keys,'ХАР.РАСПОЛ.ОБ''ЕКТА(отн.з/воды') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ХАР.РАСПОЛ.ОБ''ЕКТА(отн.з/воды')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as location,",                     
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_point",
                "name": "gidrotehnicheskie_sooruzheniya_point",
                "abstract": "Гидрографические сооружения(точка)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_point_gidrotehnicheskie_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_point_gidrotehnicheskie_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_point_gidrotehnicheskie_sooruzheniya",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_point",
                "name": "planovo_vysotnaya_osnova_point",
                "abstract": "Планово-высотная основа(точка)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_point_planovo_vysotnaya_osnova",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_point_planovo_vysotnaya_osnova",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_point_planovo_vysotnaya_osnova",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'АБСОЛЮТНАЯ ВЫСОТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'АБСОЛЮТНАЯ ВЫСОТА')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as height,",
                            "       case",
                            "           when array_position(attr_keys,'ЗНАЧЕНИЕ(СТЕПЕНЬ ГОСПОДСТВА)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ЗНАЧЕНИЕ(СТЕПЕНЬ ГОСПОДСТВА)')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'СТЕПЕНЬ ВЫСОТ.ГОСПОД.ЗНАЧ.ОР-А') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СТЕПЕНЬ ВЫСОТ.ГОСПОД.ЗНАЧ.ОР-А')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'СТЕПЕНЬ ВЫСОТНОГО ГОСПОДСТВА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СТЕПЕНЬ ВЫСОТНОГО ГОСПОДСТВА')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as domination,",
                            "       case",
                            "           when array_position(attr_keys,'МЕСТО РАСПОЛОЖЕНИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'МЕСТО РАСПОЛОЖЕНИЯ')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ХАРАКТЕР РАСПОЛОЖЕНИЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ХАРАКТЕР РАСПОЛОЖЕНИЯ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as location,",                            
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_point",
                "name": "promyshlen_sotsialnye_obekty_point",
                "abstract": "Промышленные и социальные объекты(точка)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_point_promyshlen_i_sotsialnye_ob_ekt",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_100000_point_promyshlen_i_sotsialnye_obekty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_point_promyshlennye_sotsialn_ob_ekty",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_point_promyshlennye_sotsialn_ob_ekty",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as height,",
                            "       case",
                            "           when array_position(attr_keys,'ГЛУБИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГЛУБИНА')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as depth,",
                            "       case",
                            "           when array_position(attr_keys,'НАЗНАЧЕНИЕ ОБЪЕКТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'НАЗНАЧЕНИЕ ОБЪЕКТА')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "           when array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as function,",
                            "       case",
                            "           when array_position(attr_keys,'СОСТОЯНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОСТОЯНИЕ')], E''||sym_bug||'КОД','', 'g')",
                            "           else null",
                            "       end as status,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_point",
                "name": "relef_sushi_point",
                "abstract": "Рельеф суши(точка)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_point_relef_sushi",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_200000_point_relef_sushi",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_point_relef_sushi",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            "       case",
                            "           when array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ВЫСОТА ОТНОСИТЕЛЬНАЯ')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ОТНОСИТЕЛЬНАЯ ВЫСОТА ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as height,",
                            "       case",
                            "           when array_position(attr_keys,'ГЛУБИНА') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'ГЛУБИНА')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as depth,",                            
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            }, 
            {
                "wfs_layer_temp": "wfs_point",
                "name": "gidrografiya_point",
                "abstract": "Гидрография (точка)",
                "data": {
                    "RUN":{
                        "interface.lst2str":[
                            {"VAR": "data_start"},
                            {"VAR": "query_start"},
                            "            select *",
                            "            from wfs.sxf_common_100000_point_gidrografiya",
                            "            where map_id in (select map_id from ids)",
                            "            union",
                            "            select *",
                            "            from wfs.sxf_common_1000000_point_gidrografiya",
                            "            where map_id in (select map_id from ids)",
                            {"VAR": "query_meso"},
                            "       case",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВ.(ТЕКСТ ПОДПИСИ)')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕН.НАЗВАН.,ТЕКСТ ПОДПИС')], E''||sym_bug,'', 'g')",
                            "           when array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ') > 0 then regexp_replace(attr_vals[array_position(attr_keys,'СОБСТВЕННОЕ НАЗВАНИЕ')], E''||sym_bug,'', 'g')",
                            "           else null",
                            "       end as name,",
                            {"VAR": "query_end"},
                            {"VAR": "data_end"}
                        ]
                    }
                }
            } 
        ]
    },
    "TEMPS":{
        "wfs_polygon":{
            "OBJ": "mapscript.layerObj",
            "name": {"TEMP": "\"{{layer_var['name']}}\""},
            "status": {"OBJ": "mapscript.MS_ON"}, 
            "setProjection": {"TEMP":"\"init=epsg:{{epsg_id}}\""},
            "type": {"OBJ": "mapscript.MS_LAYER_POLYGON"}, 
            "units": {"OBJ": "mapscript.MS_METERS"},
            "tileitem": "location",
            "connectiontype": {"OBJ": "mapscript.MS_POSTGIS"},
            "connection": {"VAR": "db_connection"},
            "data": {"TEMP": "\"{{layer_var['data']}}\""},
            "metadata.set": [
                [
                    "wfs_abstract",
                    {"TEMP": "\"{{layer_var['abstract']}}\""}
                ],
                [
                    "wfs_title",
                    {"TEMP": "\"{{layer_var['title']}}\""}
                ],
                ["gml_include_items", "all"],
                ["gml_featureid", "id"],
                ["wfs_enable_request", "*"]
            ],
            "labelitem": "name"
        },
        "wfs_line":{
            "OBJ": "mapscript.layerObj",
            "name": {"TEMP": "\"{{layer_var['name']}}\""},
            "status": {"OBJ": "mapscript.MS_ON"}, 
            "setProjection": {"TEMP":"\"init=epsg:{{epsg_id}}\""},
            "type": {"OBJ": "mapscript.MS_LAYER_LINE"}, 
            "units": {"OBJ": "mapscript.MS_METERS"},
            "tileitem": "location",
            "connectiontype": {"OBJ": "mapscript.MS_POSTGIS"},
            "connection": {"VAR": "db_connection"},
            "data": {"TEMP": "\"{{layer_var['data']}}\""},
            "metadata.set": [
                [
                    "wfs_abstract",
                    {"TEMP": "\"{{layer_var['abstract']}}\""}
                ],
                [
                    "wfs_title",
                    {"TEMP": "\"{{layer_var['title']}}\""}
                ],
                ["gml_include_items", "all"],
                ["gml_featureid", "id"],
                ["wfs_enable_request", "*"]
            ],
            "labelitem": "name"
        },
        "wfs_point":{
            "OBJ": "mapscript.layerObj",
            "name": {"TEMP": "\"{{layer_var['name']}}\""},
            "status": {"OBJ": "mapscript.MS_ON"}, 
            "setProjection": {"TEMP":"\"init=epsg:{{epsg_id}}\""},
            "type": {"OBJ": "mapscript.MS_LAYER_POINT"}, 
            "units": {"OBJ": "mapscript.MS_METERS"},
            "tileitem": "location",
            "connectiontype": {"OBJ": "mapscript.MS_POSTGIS"},
            "connection": {"VAR": "db_connection"},
            "data": {"TEMP": "\"{{layer_var['data']}}\""},
            "metadata.set": [
                [
                    "wfs_abstract",
                    {"TEMP": "\"{{layer_var['abstract']}}\""}
                ],
                [
                    "wfs_title",
                    {"TEMP": "\"{{layer_var['title']}}\""}
                ],
                ["gml_include_items", "all"],
                ["gml_featureid", "id"],
                ["wfs_enable_request", "*"]
            ],
            "labelitem": "name"
        },
        "map_temp":{
            "OBJ": "mapscript.mapObj",
            "name": {"VAR": "name"},
            "imagecolor.setRGB": [{"TEMP": "{{imagecolor}}"}],
            "setExtent": [{"VAR": "extent"}],
            "setProjection": {"TEMP":"'init=epsg:{{epsg_id}}'"},
            "setSize": [{"VAR": "size"}],
            "units": {
                "OBJ": "mapscript.MS_DD"
            },
            "web.metadata.set": [
                ["labelcache_map_edge_buffer", "-10"],
                ["wms_title", {"VAR": "title"}],
                ["wms_srs", "EPSG:4326 EPSG:32638 EPSG:3857 EPSG:900913"],
                ["wfs_title", {"VAR": "title"}],
                ["wfs_srs", "EPSG:4326 EPSG:32638 EPSG:3857 EPSG:900913"]
            ],
            "SUB_OBJ": [
                {"TEMP": [
                        "{% for layer_var in layer_dicts %}",
                        "    {% if layer_var['wfs_layer_temp'] is defined %}",
                        "        {% include layer_var['wfs_layer_temp'] %},",
                        "    {% endif %}",
                        "    {% if layer_var['wms_layer_temp'] is defined %}",
                        "        {% include layer_var['wms_layer_temp'] %},",
                        "    {% endif %}",
                        "{% endfor %}"
                    ]
                }
            ]
        }
    },
    "MAP":{
        "TEMP":"map_temp"
    }
}